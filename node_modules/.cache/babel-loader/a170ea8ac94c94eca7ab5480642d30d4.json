{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Study/index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouteMatch, Link, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortContoller = new AbortController();\n\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        error.name === \"AbortError\" ? console.log(\"aborted\") : console.error();\n      }\n    }\n\n    LoadDeck();\n    return () => abortContoller.abort();\n  }, []);\n  console.log(\"cards = \", deck.cards); // const clickHandler = () => {\n  //   setFlipped((prev) => !prev);\n  // };\n\n  const cardsArray = deck.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card w-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Card \", car.id, \" of \", deck.cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), !flipped ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: clickHandler,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: \"Deck Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: url,\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Study, \"gw6FPGmhZBIOaOw2JhsGZUQx1nI=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Study/index.js"],"names":["useRouteMatch","Link","useParams","useState","useEffect","readDeck","Study","deck","setDeck","flipped","setFlipped","url","deckId","abortContoller","AbortController","LoadDeck","result","error","name","console","log","abort","cards","cardsArray","map","card","index","car","id","length","front","back","clickHandler"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,IAAxB,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAUX,aAAa,EAA7B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAaV,SAAS,EAA5B;AACAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,cAAc,GAAG,IAAIC,eAAJ,EAAvB;;AACA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,YAAIC,MAAM,GAAG,MAAMX,QAAQ,CAACO,MAAD,CAA3B;AAEAJ,QAAAA,OAAO,CAACQ,MAAD,CAAP;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdA,QAAAA,KAAK,CAACC,IAAN,KAAe,YAAf,GAA8BC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA9B,GAAuDD,OAAO,CAACF,KAAR,EAAvD;AACD;AACF;;AACDF,IAAAA,QAAQ;AAER,WAAO,MAAMF,cAAc,CAACQ,KAAf,EAAb;AACD,GAdQ,EAcN,EAdM,CAAT;AAgBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,IAAI,CAACe,KAA7B,EArBe,CAuBf;AACA;AACA;;AAEA,QAAMC,UAAU,GAAGhB,IAAI,CAACe,KAAL,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBAChC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,4BACQC,GAAG,CAACC,EADZ,UACoBrB,IAAI,CAACe,KAAL,CAAWO,MAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,CAACpB,OAAD,gBACC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BgB,IAAI,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BL,IAAI,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,cAPJ,eASE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;AAkBA,sBACE;AAAA,2BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASpB,MAAO,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;;GA/DQL,K;UAGSN,a,EACGE,S;;;KAJZI,K;AAiET,eAAeA,KAAf","sourcesContent":["import { useRouteMatch, Link, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\nfunction Study() {\n  const [deck, setDeck] = useState([]);\n  const [flipped, setFlipped] = useState(false);\n  const { url } = useRouteMatch();\n  const { deckId } = useParams();\n  useEffect(() => {\n    const abortContoller = new AbortController();\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n\n        setDeck(result);\n      } catch (error) {\n        error.name === \"AbortError\" ? console.log(\"aborted\") : console.error();\n      }\n    }\n    LoadDeck();\n\n    return () => abortContoller.abort();\n  }, []);\n\n  console.log(\"cards = \", deck.cards);\n\n  // const clickHandler = () => {\n  //   setFlipped((prev) => !prev);\n  // };\n\n  const cardsArray = deck.cards.map((card, index) => (\n    <div className=\"card w-50\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          Card {car.id} of {deck.cards.length}\n        </h5>\n        {!flipped ? (\n          <p className=\"card-text\">{card.front}</p>\n        ) : (\n          <p className=\"card-text\">{card.back}</p>\n        )}\n        <button className=\"btn btn-primary\" onClick={clickHandler}>\n          Flip\n        </button>\n      </div>\n    </div>\n  ));\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>Deck Name</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Study</Link>\n          </li>\n        </ol>\n      </nav>\n      {/* {cardsArray} */}\n    </>\n  );\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}