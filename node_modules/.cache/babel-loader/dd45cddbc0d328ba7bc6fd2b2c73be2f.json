{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/EditDeck/index.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { HouseFill } from \"react-bootstrap-icons\";\nimport { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  url,\n  decks,\n  setUpdated\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  console.log(deckId); // const history = useHistory();\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   async function getDeck() {\n  //     try {\n  //       let result = await readDeck(deckId, abortController.signal);\n  //       setDeck(result);\n  //     } catch (error) {\n  //       throw error;\n  //     }\n  //   }\n  //   getDeck();\n  //   return () => abortController.abort();\n  // }, []);\n  // const handleChange = ({ target }) => {\n  //   setDeck({\n  //     ...deck,\n  //     [target.name]: target.value,\n  //   });\n  // };\n  // const submitHandler = (event) => {\n  //   event.preventDefault();\n  //   let deckId = decks.length + 1;\n  //   setDeck({ name: deck.name, description: deck.description });\n  //   const abortController = new AbortController();\n  //   try {\n  //     async function UpdateDeck() {\n  //       let result = await updateDeck(deck, abortController.signal);\n  //       setUpdated(result);\n  //     }\n  //     UpdateDeck();\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  //   history.push(`/decks/${deckId}`);\n  // };\n\n  console.log(deck);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(EditDeck, \"nkRFBTwHWRTcGO5/Q1+QFxWmGck=\", true);\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/EditDeck/index.js"],"names":["Link","useHistory","useRouteMatch","HouseFill","useState","useEffect","updateDeck","readDeck","EditDeck","url","decks","setUpdated","deckId","useParams","deck","setDeck","console","log"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;;;;AACA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAlB,EAA8C;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaC,SAAS,EAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ,EAJ4C,CAM5C;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqDD;;GAvGQN,Q;;KAAAA,Q;AAyGT,eAAeA,QAAf","sourcesContent":["import { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { HouseFill } from \"react-bootstrap-icons\";\nimport { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nfunction EditDeck({ url, decks, setUpdated }) {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({});\n\n  console.log(deckId);\n\n  // const history = useHistory();\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n\n  //   async function getDeck() {\n  //     try {\n  //       let result = await readDeck(deckId, abortController.signal);\n  //       setDeck(result);\n  //     } catch (error) {\n  //       throw error;\n  //     }\n  //   }\n  //   getDeck();\n\n  //   return () => abortController.abort();\n  // }, []);\n\n  // const handleChange = ({ target }) => {\n  //   setDeck({\n  //     ...deck,\n  //     [target.name]: target.value,\n  //   });\n  // };\n\n  // const submitHandler = (event) => {\n  //   event.preventDefault();\n  //   let deckId = decks.length + 1;\n  //   setDeck({ name: deck.name, description: deck.description });\n  //   const abortController = new AbortController();\n\n  //   try {\n  //     async function UpdateDeck() {\n  //       let result = await updateDeck(deck, abortController.signal);\n\n  //       setUpdated(result);\n  //     }\n  //     UpdateDeck();\n  //   } catch (error) {\n  //     throw error;\n  //   }\n\n  //   history.push(`/decks/${deckId}`);\n  // };\n  console.log(deck);\n  return (\n    <>\n      <h1>test</h1>\n      {/* <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>\n              <HouseFill />\n              &nbsp;Home\n            </Link>\n          </li>\n\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Edit Deck</Link>\n          </li>\n        </ol>\n      </nav>\n      <h1>Create Deck</h1> */}\n      {/* <form onSubmit={submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"DeckName\"\n            placeholder=\"\"\n            name=\"name\"\n            value={deck.name}\n            onChange={handleChange}\n            aria-describedby=\"deckName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"DeckDescription\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"\"\n            name=\"description\"\n            value={deck.description}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <Link to={\"/\"} type=\"button\" className=\"btn btn-secondary\">\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary m-1\">\n          Submit\n        </button>\n      </form> */}\n    </>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}