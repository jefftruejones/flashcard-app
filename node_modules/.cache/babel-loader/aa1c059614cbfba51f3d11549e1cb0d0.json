{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Deck/index.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\"; // import { useState, useEffect } from \"react\";\n// import { readDeck } from \"../../utils/api\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Deck({\n  decks\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams(); // const[theDeck, setTheDeck] = useState()\n\n  const deck = decks.find(deck => deck.id === deckId); // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   const deck = decks.find((deck) => deck.id === deckId);\n  //   async function readTheDeck() {\n  //     let result = await readDeck(deck, abortController.signal);\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"This represents whicherever individual deck! Deck id: \", deckId, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Deck, \"6yYjfuOVIJXeyB9Ntxit+fGIK3s=\", false, function () {\n  return [useParams];\n});\n\n_c = Deck;\nexport default Deck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Deck/index.js"],"names":["useParams","Deck","decks","deckId","deck","find","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B,C,CACA;AACA;;;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAaH,SAAS,EAA5B,CADuB,CAEvB;;AACA,QAAMI,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYH,MAAjC,CAAb,CAHuB,CAIvB;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACE;AAAA,yEAA2DA,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAhBQF,I;UACYD,S;;;KADZC,I;AAkBT,eAAeA,IAAf","sourcesContent":["import { useParams } from \"react-router-dom\";\n// import { useState, useEffect } from \"react\";\n// import { readDeck } from \"../../utils/api\";\nfunction Deck({ decks }) {\n  const { deckId } = useParams();\n  // const[theDeck, setTheDeck] = useState()\n  const deck = decks.find((deck) => deck.id === deckId);\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   const deck = decks.find((deck) => deck.id === deckId);\n  //   async function readTheDeck() {\n  //     let result = await readDeck(deck, abortController.signal);\n\n  //   }\n  // }, []);\n\n  return (\n    <h1>This represents whicherever individual deck! Deck id: {deckId} </h1>\n  );\n}\n\nexport default Deck;\n"]},"metadata":{},"sourceType":"module"}