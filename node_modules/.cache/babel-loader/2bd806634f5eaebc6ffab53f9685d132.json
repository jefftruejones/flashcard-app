{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Study/index.js\",\n    _s = $RefreshSig$();\n\nimport { useRouteMatch, Link, useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const [iterator, setIterator] = useState(0);\n  const [flipped, setFlipped] = useState(false);\n  const {\n    url\n  } = useRouteMatch();\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const abortContoller = new AbortController();\n\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n        setDeck(result);\n      } catch (error) {\n        error.name === \"AbortError\" ? console.log(\"aborted\") : console.error();\n      }\n    }\n\n    LoadDeck();\n    return () => abortContoller.abort();\n  }, [count]);\n  console.log(\"url = \", url);\n\n  const clickHandler = () => {\n    setFlipped(prev => !prev);\n  };\n\n  const countHandler = () => {\n    setIterator(prev => prev + 1);\n    setFlipped(prev => !prev);\n\n    if (iterator === deck.cards.length - 1) {\n      if (window.confirm(\"Restart Cards?/r Click 'cancel' to return to the home page.\")) {\n        history.push(url);\n        setCount(prev => prev + 1);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const cardsArray = deck.cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card w-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: [\"Card \", index + 1, \" of \", deck.cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), !flipped ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: card.front\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: card.back\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: clickHandler,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), flipped ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary m-1\",\n        onClick: countHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this));\n  console.log(\"cards array is \", cardsArray);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deckId}`,\n            children: \"Deck Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: url,\n            children: \"Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), cardsArray[iterator]]\n  }, void 0, true);\n}\n\n_s(Study, \"UbdDXmfFj5x5nevBAAOW27010ks=\", false, function () {\n  return [useRouteMatch, useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Study/index.js"],"names":["useRouteMatch","Link","useParams","useHistory","useState","useEffect","readDeck","Study","deck","setDeck","cards","iterator","setIterator","flipped","setFlipped","url","deckId","history","count","setCount","abortContoller","AbortController","LoadDeck","result","error","name","console","log","abort","clickHandler","prev","countHandler","length","window","confirm","push","cardsArray","map","card","index","front","back"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyCC,UAAzC,QAA2D,kBAA3D;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAAEM,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAUf,aAAa,EAA7B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAad,SAAS,EAA5B;AACA,QAAMe,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,CAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,cAAc,GAAG,IAAIC,eAAJ,EAAvB;;AACA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,YAAIC,MAAM,GAAG,MAAMjB,QAAQ,CAACU,MAAD,CAA3B;AAEAP,QAAAA,OAAO,CAACc,MAAD,CAAP;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdA,QAAAA,KAAK,CAACC,IAAN,KAAe,YAAf,GAA8BC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA9B,GAAuDD,OAAO,CAACF,KAAR,EAAvD;AACD;AACF;;AACDF,IAAAA,QAAQ;AAER,WAAO,MAAMF,cAAc,CAACQ,KAAf,EAAb;AACD,GAdQ,EAcN,CAACV,KAAD,CAdM,CAAT;AAgBAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,GAAtB;;AAEA,QAAMc,YAAY,GAAG,MAAM;AACzBf,IAAAA,UAAU,CAAEgB,IAAD,IAAU,CAACA,IAAZ,CAAV;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBnB,IAAAA,WAAW,CAAEkB,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAX;AACAhB,IAAAA,UAAU,CAAEgB,IAAD,IAAU,CAACA,IAAZ,CAAV;;AACA,QAAInB,QAAQ,KAAKH,IAAI,CAACE,KAAL,CAAWsB,MAAX,GAAoB,CAArC,EAAwC;AACtC,UACEC,MAAM,CAACC,OAAP,CACE,6DADF,CADF,EAIE;AACAjB,QAAAA,OAAO,CAACkB,IAAR,CAAapB,GAAb;AACAI,QAAAA,QAAQ,CAAEW,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAR;AACD,OAPD,MAOO;AACLb,QAAAA,OAAO,CAACkB,IAAR,CAAa,GAAb;AACD;AACF;AACF,GAfD;;AAiBA,QAAMC,UAAU,GAAG5B,IAAI,CAACE,KAAL,CAAW2B,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBAChC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,4BACQA,KAAK,GAAG,CADhB,UACuB/B,IAAI,CAACE,KAAL,CAAWsB,MADlC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIG,CAACnB,OAAD,gBACC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0ByB,IAAI,CAACE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BF,IAAI,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,cAPJ,eASE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEZ,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAYGhB,OAAO,gBACN;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAEkB,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,GAKN,EAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;AAyBAL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,UAA/B;AAEA,sBACE;AAAA,4BACE;AAAK,oBAAW,YAAhB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAASpB,MAAO,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAI,UAAA,SAAS,EAAC,wBAAd;AAAuC,0BAAa,MAApD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAcGqB,UAAU,CAACzB,QAAD,CAdb;AAAA,kBADF;AAkBD;;GA5FQJ,K;UAISP,a,EACGE,S,EACHC,U;;;KANTI,K;AA8FT,eAAeA,KAAf","sourcesContent":["import { useRouteMatch, Link, useParams, useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { readDeck } from \"../../utils/api\";\nfunction Study() {\n  const [deck, setDeck] = useState({ cards: [] });\n  const [iterator, setIterator] = useState(0);\n  const [flipped, setFlipped] = useState(false);\n  const { url } = useRouteMatch();\n  const { deckId } = useParams();\n  const history = useHistory();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    const abortContoller = new AbortController();\n    async function LoadDeck() {\n      try {\n        let result = await readDeck(deckId);\n\n        setDeck(result);\n      } catch (error) {\n        error.name === \"AbortError\" ? console.log(\"aborted\") : console.error();\n      }\n    }\n    LoadDeck();\n\n    return () => abortContoller.abort();\n  }, [count]);\n\n  console.log(\"url = \", url);\n\n  const clickHandler = () => {\n    setFlipped((prev) => !prev);\n  };\n\n  const countHandler = () => {\n    setIterator((prev) => prev + 1);\n    setFlipped((prev) => !prev);\n    if (iterator === deck.cards.length - 1) {\n      if (\n        window.confirm(\n          \"Restart Cards?/r Click 'cancel' to return to the home page.\"\n        )\n      ) {\n        history.push(url);\n        setCount((prev) => prev + 1);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const cardsArray = deck.cards.map((card, index) => (\n    <div className=\"card w-50\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">\n          Card {index + 1} of {deck.cards.length}\n        </h5>\n        {!flipped ? (\n          <p className=\"card-text\">{card.front}</p>\n        ) : (\n          <p className=\"card-text\">{card.back}</p>\n        )}\n        <button className=\"btn btn-primary\" onClick={clickHandler}>\n          Flip\n        </button>\n        {flipped ? (\n          <button className=\"btn btn-primary m-1\" onClick={countHandler}>\n            Next\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  ));\n\n  console.log(\"cards array is \", cardsArray);\n\n  return (\n    <>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>Deck Name</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Study</Link>\n          </li>\n        </ol>\n      </nav>\n      {cardsArray[iterator]}\n    </>\n  );\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}