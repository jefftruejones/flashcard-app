{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/EditDeck/index.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport { HouseFill } from \"react-bootstrap-icons\";\nimport { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  setUpdated\n}) {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const history = useHistory();\n  const {\n    url\n  } = useRouteMatch();\n  console.log(deckId); // const history = useHistory();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        let result = await readDeck(deckId, abortController.signal);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    getDeck();\n    return () => abortController.abort();\n  }, []);\n\n  const handleChange = ({\n    target\n  }) => {\n    setDeck({ ...deck,\n      [target.name]: target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setDeck({\n      name: deck.name,\n      description: deck.description\n    });\n    const abortController = new AbortController();\n\n    try {\n      async function UpdateDeck() {\n        let result = await updateDeck(deck, abortController.signal);\n        setUpdated(result);\n      }\n\n      UpdateDeck();\n    } catch (error) {\n      throw error;\n    }\n\n    history.push(`/decks/${deckId}`);\n  };\n\n  console.log(deck);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(HouseFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), \"\\xA0Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: url,\n            children: \"Edit Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditDeck, \"BDkXx2P5lT7R63JkZnN1iAiRdiQ=\", false, function () {\n  return [useParams, useHistory, useRouteMatch];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/EditDeck/index.js"],"names":["Link","useHistory","useParams","useRouteMatch","HouseFill","useState","useEffect","updateDeck","readDeck","EditDeck","setUpdated","deckId","deck","setDeck","history","url","console","log","abortController","AbortController","getDeck","result","signal","error","abort","handleChange","target","name","value","submitHandler","event","preventDefault","description","UpdateDeck","push"],"mappings":"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","sourcesContent":["import { Link, useHistory, useParams, useRouteMatch } from \"react-router-dom\";\nimport { HouseFill } from \"react-bootstrap-icons\";\nimport { useState, useEffect } from \"react\";\nimport { updateDeck, readDeck } from \"../../utils/api\";\nfunction EditDeck({ setUpdated }) {\n  const { deckId } = useParams();\n  const [deck, setDeck] = useState({});\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  console.log(deckId);\n\n  // const history = useHistory();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function getDeck() {\n      try {\n        let result = await readDeck(deckId, abortController.signal);\n        setDeck(result);\n      } catch (error) {\n        throw error;\n      }\n    }\n    getDeck();\n\n    return () => abortController.abort();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setDeck({\n      ...deck,\n      [target.name]: target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    setDeck({ name: deck.name, description: deck.description });\n    const abortController = new AbortController();\n\n    try {\n      async function UpdateDeck() {\n        let result = await updateDeck(deck, abortController.signal);\n\n        setUpdated(result);\n      }\n      UpdateDeck();\n    } catch (error) {\n      throw error;\n    }\n\n    history.push(`/decks/${deckId}`);\n  };\n  console.log(deck);\n  return (\n    <>\n      <h1>test</h1>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to={\"/\"}>\n              <HouseFill />\n              &nbsp;Home\n            </Link>\n          </li>\n\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            <Link to={url}>Edit Deck</Link>\n          </li>\n        </ol>\n      </nav>\n      <h1>Create Deck</h1>\n      {/* <form onSubmit={submitHandler}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"DeckName\"\n            placeholder=\"\"\n            name=\"name\"\n            value={deck.name}\n            onChange={handleChange}\n            aria-describedby=\"deckName\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"DeckDescription\">Description</label>\n          <textarea\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"\"\n            name=\"description\"\n            value={deck.description}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <Link to={\"/\"} type=\"button\" className=\"btn btn-secondary\">\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary m-1\">\n          Submit\n        </button>\n      </form> */}\n    </>\n  );\n}\n\nexport default EditDeck;\n"]},"metadata":{},"sourceType":"module"}