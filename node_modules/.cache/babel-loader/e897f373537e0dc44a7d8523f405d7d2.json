{"ast":null,"code":"var _jsxFileName = \"/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Home/index.js\",\n    _s = $RefreshSig$();\n\nimport { Plus, EyeFill, Trash, CardText } from \"react-bootstrap-icons\";\nimport { Link, useHistory, Switch, Route } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\nimport Deck from \"../Deck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Home({\n  decks,\n  setUpdated\n}) {\n  _s();\n\n  const history = useHistory(); // const handleDelete = ;\n\n  console.log(history.POP);\n  let deckRend = decks.map((deck, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row m-1\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}`,\n            className: \"btn btn-primary ml-1 \",\n            children: [/*#__PURE__*/_jsxDEV(EyeFill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), \"\\xA0 View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/decks/${deck.id}/study`,\n            className: \"btn btn-primary ml-1\",\n            children: [/*#__PURE__*/_jsxDEV(CardText, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), \" \\xA0 Study\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-danger offset-5 offset-md-7 offset-lg-8\",\n            onClick: () => {\n              if (window.confirm(\"Delete this deck? You will not be able to recover it!\")) {\n                const abortController = new AbortController();\n\n                try {\n                  let result = deleteDeck(deck.id);\n                  setUpdated(result);\n                } catch (error) {\n                  throw error;\n                }\n              } else {\n                history.push(\"/\");\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  console.log(\"deck shape is \", decks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/decks/new\",\n        className: \"btn btn-secondary text-white ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), \" Create Deck\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), deckRend, /*#__PURE__*/_jsxDEV(Switch, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/decks/:deckId\",\n        children: /*#__PURE__*/_jsxDEV(Deck, {\n          decks: decks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jeffjones/Qualified/flashcard/Project_Flashcards_Qualified_1/src/Layout/Home/index.js"],"names":["Plus","EyeFill","Trash","CardText","Link","useHistory","Switch","Route","deleteDeck","Deck","Home","decks","setUpdated","history","console","log","POP","deckRend","map","deck","index","name","description","id","window","confirm","abortController","AbortController","result","error","push"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA+C,uBAA/C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,kBAAhD;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAd,EAAqC;AAAA;;AACnC,QAAMC,OAAO,GAAGR,UAAU,EAA1B,CADmC,CAEnC;;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAApB;AAEA,MAAIC,QAAQ,GAAGN,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACvB;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACG,GADH,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BD,IAAI,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BF,IAAI,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,EAEkD,GAFlD,eAGE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,qBACG,GADH,eAEE,QAAC,IAAD;AACE,YAAA,EAAE,EAAG,UAASH,IAAI,CAACI,EAAG,EADxB;AAEE,YAAA,SAAS,EAAC,uBAFZ;AAAA,oCAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,IAAD;AACE,YAAA,EAAE,EAAG,UAASJ,IAAI,CAACI,EAAG,QADxB;AAEE,YAAA,SAAS,EAAC,sBAFZ;AAAA,oCAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAgBE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,iDAFZ;AAGE,YAAA,OAAO,EAAE,MAAM;AACb,kBACEC,MAAM,CAACC,OAAP,CACE,uDADF,CADF,EAIE;AACA,sBAAMC,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,oBAAI;AACF,sBAAIC,MAAM,GAAGpB,UAAU,CAACW,IAAI,CAACI,EAAN,CAAvB;AACAX,kBAAAA,UAAU,CAACgB,MAAD,CAAV;AACD,iBAHD,CAGE,OAAOC,KAAP,EAAc;AACd,wBAAMA,KAAN;AACD;AACF,eAZD,MAYO;AACLhB,gBAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD;AACF,aAnBH;AAAA,mCAqBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AArBF;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAiCV,KAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA,UADa,CAAf;AAoDAN,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,KAA9B;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACG,GADH,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,mCAAhC;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGM,QAPH,eAQE,QAAC,MAAD;AAAA,iBACG,GADH,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,gBAAb;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEN;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiBD;;GA7EQD,I;UACSL,U;;;KADTK,I;AA+ET,eAAeA,IAAf","sourcesContent":["import { Plus, EyeFill, Trash, CardText } from \"react-bootstrap-icons\";\nimport { Link, useHistory, Switch, Route } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api\";\nimport Deck from \"../Deck\";\n\nfunction Home({ decks, setUpdated }) {\n  const history = useHistory();\n  // const handleDelete = ;\n\n  console.log(history.POP);\n\n  let deckRend = decks.map((deck, index) => (\n    <div className=\"row m-1\" key={index}>\n      {\" \"}\n      <div className=\"card w-100\" key={index}>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{deck.name}</h5>\n          <p className=\"card-text\">{deck.description}</p>{\" \"}\n          <div className=\"row\">\n            {\" \"}\n            <Link\n              to={`/decks/${deck.id}`}\n              className=\"btn btn-primary ml-1\n         \"\n            >\n              <EyeFill />\n              &nbsp; View\n            </Link>\n            <Link\n              to={`/decks/${deck.id}/study`}\n              className=\"btn btn-primary ml-1\"\n            >\n              <CardText /> &nbsp; Study\n            </Link>\n            <button\n              type=\"button\"\n              className=\"btn btn-danger offset-5 offset-md-7 offset-lg-8\"\n              onClick={() => {\n                if (\n                  window.confirm(\n                    \"Delete this deck? You will not be able to recover it!\"\n                  )\n                ) {\n                  const abortController = new AbortController();\n                  try {\n                    let result = deleteDeck(deck.id);\n                    setUpdated(result);\n                  } catch (error) {\n                    throw error;\n                  }\n                } else {\n                  history.push(\"/\");\n                }\n              }}\n            >\n              <Trash />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ));\n\n  console.log(\"deck shape is \", decks);\n\n  return (\n    <>\n      <div className=\"row\">\n        {\" \"}\n        <Link to=\"/decks/new\" className=\"btn btn-secondary text-white ml-4\">\n          <Plus /> Create Deck\n        </Link>\n      </div>\n      {deckRend}\n      <Switch>\n        {\" \"}\n        <Route path={\"/decks/:deckId\"}>\n          <Deck decks={decks} />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}